Указатель.

	Веб в целом.

	Клиент серверное взаимодействие.

	Протоколы. (http, https, WebSocket, ftp, smtp, soap, tcp/ip)

    Форматы данных. (Xml, Json, YAML)

	Авторизация, аутентификация, безопасность.

	ООП.

	MVC.

	SOLID.

	DRY.

    Язык и его тонкости. История.

	База и её тонкости.

	Стандартные виды запросов.

	Оптимизация запросов.

	Оптимизация в целом. (кэширование, proxy reverse)

	Книга алгориты и структуры данных.

	Заготовки на аутентификацию, ajax, crud.

Веб в целом.

	Интернет это всемирная система объединённых компьютерных сетей для хранения и передачи информации.

	Компьютерная сеть - система, обеспечивающая обмен данными между компьютерами, серверами и другим оборудованием.

	Каждый компьютер в сети подключается к маршрутизатору. Маршрутизатор следит за тем, чтобы пакет, отправленный одним компьютером был получен другим компьютером.

	Чтобы послать сообщение какому-то компьютеру, необходимо как-то обратиться к нему. Поэтому каждый компьютер, подключенный к сети, имеет свой уникальный адрес для связи. Этот адрес называют IP-адресом (Internet Protocol). В зависимости от версии протокола IP этот адрес может записываться по-разному. Самая широко используемая версия интернет-протокола — версия 4. Адреса IPv4 обычно записываются в виде четырёх чисел, разделенных точками, например: 192.168.2.10.

    Для того чтобы обратиться к конкретному компьютеру в сети из вне нужно назначить порт на котором будет доступен этот компьютер.

    Чтобы узнать ip адрес компьютера вводим в консоль ipconfig /all

	Мы можем присвоить каждому IP-адресу псевдоним с понятным для человека именем. Такой псевдоним называют доменным именем. Например, google.com — доменное имя, которое является псевдонимом IP-адреса 173.194.121.32. Использование доменного имени — самый простой способ обратиться к компьютеру в интернете.

	Следующий шаг — передать сообщение из нашей сети в сеть, с которой мы хотим связаться. Чтобы сделать это, мы должны подключить нашу сеть к провайдеру услуг интернета. Интернет провайдер имеет специальные маршрутизаторы, которые связаны с маршрутизаторами других провайдеров. Таким образом, наше сообщение, пройдя транзитом через сеть нескольких провайдеров, достигнет сеть назначения.

	Интернет построен на базе протокола IP. 

    На основе Интернета работает Всемирная паутина (World Wide Web, WWW).

    Всемирная паутина - система, предоставляющая доступ к связанным между собой документам, расположенным на различных компьютерах, подключённых к сети Интернет. Для обозначения Всемирной паутины также используют слово веб.

    Всемирную паутину образуют сотни миллионов веб-серверов. Большинство ресурсов Всемирной паутины основаны на технологии гипертекста. Гипертекстовые документы, размещаемые во Всемирной паутине, называются веб-страницами. Несколько веб-страниц, объединённых общей темой, дизайном, а также связанных между собой ссылками и обычно находящихся на одном и том же веб-сервере, называются веб-сайтом. 

    Всемирная паутина неразрывно связана с понятиями гипертекста и гиперссылки. Большая часть информации в Вебе представляет собой именно гипертекст.

    Для создания, хранения и отображения гипертекста во Всемирной паутине традиционно используется язык HTML (англ. HyperText Markup Language «язык разметки гипертекста»). Работа по созданию (разметке) гипертекстовых документов называется вёрсткой.

    Для определения местонахождения ресурсов во Всемирной паутине используются единообразные локаторы ресурсов URL (англ. Uniform Resource Locator). Первая часть URL это доменное имя. Доменное имя обозначает компьютер, который исполняет код нужного веб-сервера.

    Для улучшения визуального восприятия веба стала широко использоваться технология CSS, которая позволяет задавать единые стили оформления для множества веб-страниц.

    История.

	    В 1969 созданием первая интернет-сеть ARPANet.

	    В 1984 году была разработана система доменных имён (Domain Name System, DNS).

	    В 1989 году в Европе, в стенах Европейского совета по ядерным исследованиям (ЦЕРН) родилась концепция Всемирной паутины. Её предложил знаменитый британский учёный Тим Бернерс-Ли, он же в течение двух лет разработал протокол HTTP, язык HTML и идентификаторы URI. В рамках проекта Бернерс-Ли написал первый в мире веб-сервер «httpd»

	    Первый в мире веб-сайт Бернерс-Ли создал по адресу http://info.cern.ch

	    В 1990 году сеть ARPANET прекратила своё существование, полностью проиграв конкуренцию NSFNet.

	    В 1991 году Всемирная паутина стала общедоступна в интернете, а в 1993 году появился знаменитый веб-браузер NCSA Mosaic.

	    В 1995 году был образован Консорциум Всемирной паутины (W3C).

	    3 июня 2011 года была принята резолюция ООН, признающая доступ в Интернет базовым правом человека. Таким образом, отключение тех или иных регионов от Интернета является нарушением прав человека.

Клиент серверное взаимодействие.

    Для загрузки и просмотра веб-страниц используются специальные программы — браузеры. Браузер это клиент.

	Веб-сервер — это компьютерная программа, запускаемая на подключённом к сети компьютере и использующая протокол HTTP для передачи данных. В простейшем виде такая программа получает по сети HTTP-запрос на определённый ресурс, находит соответствующий файл на локальном жёстком диске и отправляет его по сети запросившему компьютеру. Более сложные веб-серверы способны в ответ на HTTP-запрос динамически генерировать документы с помощью шаблонов и сценариев.

Протоколы. (http, https, WebSocket, ftp, smtp, soap, tcp/ip)
    
    HTTP (HyperText Transfer Protocol) — протокол передачи гипертекста. В настоящий момент используется и для передачи произвольных данных.

    В HTTP используется технология клиент - сервер.

    Основой HTTP является ресурс, на который указывает URI в запросе клиента. Обычно такими ресурсами являются хранящиеся на сервере файлы.

    Особенностью протокола HTTP является возможность указать в запросе и ответе способ представления ресурса. Для этого используется HTTP-заголовок. Именно благодаря возможности указания способа кодирования сообщения, клиент и сервер могут обмениваться двоичными данными, хотя данный протокол является текстовым.

    HTTP не сохраняет своего состояния. Это означает отсутствие сохранения промежуточного состояния между парами запрос - ответ.

    Каждое HTTP-сообщение состоит из трёх частей, которые передаются в указанном порядке:

        Стартовая строка (Starting line)

            Метод URI HTTP/Версия

        Заголовки (Headers). Это строки. В заголовках указываются параметры передачи и прочие сведения.

            Server: Apache/2.2.11 (Win32) PHP/5.3.0
            Last-Modified: Sat, 16 Jan 2010 21:16:42 GMT
            Content-Type: text/plain; charset=windows-1251
            Content-Language: ru

            Все заголовки разделяются на четыре основных группы:

            	General Headers («Основные заголовки») — могут включаться в любое сообщение клиента и сервера.

            	Request Headers («Заголовки запроса») — используются только в запросах клиента.

            	Response Headers («Заголовки ответа») — только для ответов от сервера.

            	Entity Headers («Заголовки сущности») — сопровождают каждую сущность сообщения.

        Тело сообщения (Message Body). В теле сообщения передают данные. Обязательно должно отделяться от заголовков пустой строкой.

    Тело сообщения может отсутствовать, но стартовая строка и заголовок являются обязательными элементами.

    Основные методы HTTP: GET, POST, PUT, DELETE.

    Помимо этого есть такие методы как: OPTIONS (Используется для определения возможностей веб-сервера или параметров соединения для конкретного ресурса. В ответ серверу следует включить заголовок Allow со списком поддерживаемых методов), HEAD (обычно применяется для извлечения метаданных, то есть данных, относящиеся к дополнительной информации о содержимом или объекте), PATCH (аналогично PUT, но применяется только к фрагменту ресурса), TRACE, CONNECT.

    Первой строкой ответа сервера на запрос клиента является код состояния. За кодом состояния обычно следует отделённая пробелом поясняющая фраза. Например: 200 OK

    Клиент узнаёт по коду ответа о результатах его запроса и определяет, какие действия ему предпринимать дальше.

    Коды состояния:

    	1xx (информационные)

    	2xx (успех)

    	3xx (перенаправление)

    	4xx (ошибка клиента)

    	5xx (ошибка сервера)

    HTTPS (HyperText Transfer Protocol Secure) - расширение протокола HTTP для поддержки шифрования в целях повышения безопасности. Данные в протоколе HTTPS передаются поверх криптографических протоколов SSL или TLS. В отличие от HTTP с TCP-портом 80, для HTTPS по умолчанию используется TCP-порт 443.

    В HTTPS для передачи данных создаётся защищённый канал. Системный администратор устанавливает на веб-сервер закрытый и открытый ключи. Клиент посылает запрос на сервер. В ответ сервер отправляет копию сертификата. Клиент проверяет подлинность сертификата в центре сертификации. Если сертификат не поддельный, то клиент и сервер тайно договариваются о секретном симметричном ключе. С помощью этого ключа устанавливается защищённое HTTPS-соединение.

    WebSocket — протокол предназначенный для обмена сообщениями между браузером и веб-сервером в режиме реального времени.

    При соединении браузер отправляет по HTTP специальные заголовки, спрашивая: «поддерживает ли сервер WebSocket?» Если сервер в ответных заголовках отвечает «да, поддерживаю», то дальше HTTP прекращается и общение идёт на специальном протоколе WebSocket, который уже не имеет с HTTP ничего общего.

    Протокол Web Socket определяет две URI схемы, ws: (нешифрованное соединение) и wss: (шифрованное соединение).

Форматы данных. (Xml, Json, YAML)

    XML.

        Это расширяемый язык разметки. 

        XML решает задачу хранения и транспортировки данных.

        В XML можно изобретать свои собственные теги.

    JSON.

        Это текстовый формат обмена данными, основанный на JavaScript. 

        Если говорить о веб-приложениях, то JSON уместен в задачах обмена данными как между браузером и сервером.

        {
           "firstName": "Иван",
           "lastName": "Иванов",
           "address": {
               "streetAddress": "Московское ш., 101, кв.101",
               "city": "Ленинград",
               "postalCode": "101101"
           }
        }

        JSON предназначен для передачи данных в сериализованном виде.

    YAML.

        Это не язык разметки.

        Это человекочитаемый формат сериализации данных.

        YAML в основном используется как формат для файлов конфигурации.


Авторизация, аутентификация, безопасность.

    Аутентификация - процедура проверки пользователя. Как привило посредством ввода им логина и пароля. Если они верны, то пользователь аутентифицирован и теперь имеет доступ к ресурсу. 

    Авторизация - проверка наличия прав у пользователя на совершение того или иного действия. Например оба пользователя могут быть аутентифицированны, но одни из них может только читать статьи, а второй и читатать и редактировать.

ООП.

    Объектно-ориентированное программи́рование.

    


	



