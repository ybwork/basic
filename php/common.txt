Типы данных.

    Булев, целые числа, числа с плавающей точкой, строки, массивы, итерируемые, объекты, ресурс, NULL, функции обратного вызова.

Булев тип.

    Любое отрицательное значение равно true.

    Для явного преобразования в boolean, используйте (bool) или (boolean).

    При преобразовании в boolean, следующие значения рассматриваются как FALSE: boolean, 0, 0.0, '', '0', [], NULL

Переменные.

    Правильное имя переменной должно начинаться с буквы или символа подчеркивания.

    $this - это специальная переменная, которой нельзя ничего присваивать.

    Функции: var_dump, empty, gettype, is_int.

    После того как одной переменной присвоено значение другой, изменение одной из них не влияет на другую.

    Возможно присвоение значений по ссылке. Это означает, что новая переменная просто ссылается на оригинальную переменную. Изменения в новой переменной отражаются на оригинале, и наоборот.

    $foo = 'Боб';
    $bar = &$foo;
    $bar = "Меня зовут $bar";

    Значение по ссылке возможно только если это именованные переменные.

    Хорошей практикой считается инициализировать переменные.

    Предопределенные переменные: $_GET, $_POST, $DOCUMENT_ROOT, $GLOBALS.

    Область видимости переменной это контекст, в котором эта переменная определена. Есть глобальные и локальные переменные. Внутри функции все переменные считаются локальными и имеют область видимости этой функции.

    Если нужно использовать глобальные переменные внутри функции, нужно объявить их там с помощью ключевого слова global.

        public function make()
        {
            global $a, $b;

            $c = $a + $b;
        }

    Есть статические переменные, которые существует только в локальной области видимости функции, но не теряет своего значения, когда выполнение программы выходит из этой области видимости.

        function do_more()
        {
            static $a = 0;
            echo $a;
            $a++;
        }

    Теперь $a будет проинициализирована только при первом вызове функции, а каждый вызов функции test() будет выводить значение $a и инкрементировать его.

    Переменная переменной берет значение переменной и рассматривает его как имя переменной.

        $a = 'hello';
        $$a = 'world';

    Обратите внимание, что переменные переменных не могут использоваться с cуперглобальными массивами PHP. Переменная $this также является особой, на нее нельзя ссылаться динамически.

Константы.

    Это имя для простого значения.

    Имена констант всегда пишутся в верхнем регистре.

    define('TEST', 'cost');

Волшебные константы.

    Это предопределённые константы.

    __LINE__ - текущий номер строки в файле.

    __FILE__ - полный путь и имя текущего файла

    __DIR__ - директория файла

    __FUNCTION__ - имя функции

    __CLASS__ - имя класса

    __TRAIT__ - имя трейта

    
HTTP Cookies.

    Это небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере пользователя.

    Веб-клиент каждый раз при попытке открыть страницу сайта пересылает этот фрагмент данных веб-серверу в составе HTTP-запроса. 

    На практике обычно используется для аутентификации, хранения персональных предпочтений и настроек пользователя, отслеживания состояния сеанса доступа пользователя, ведения статистики о пользователях.

    Вы можете установить cookies, используя функцию setcookie()

    Cookies являются частью HTTP-заголовка, поэтому функция setcookie() должна вызываться до того, как браузеру будет отправлен какой бы то ни было вывод. Это то же ограничение, что и для функции header().

    Обратите внимание, что cookie заменит предыдущую cookie с тем же именем в вашем браузере.

Рекурсия.

    Рекурсивной является функция, вызывающая саму себя.

    При написании рекурсивной функции нужно быть внимательным, поскольку есть вероятность сделать рекурсию бесконечной. Вы должны убедиться, что существует адекватный способ завершения рекурсии. Следующая простая функция рекурсивно считает до 10, используя для определения момента остановки статическую переменную $count:

    function test()
    {
        static $count = 0;

        $count++;
        echo $count;
        if ($count < 10) {
            test();
        }
        $count--;
    }

Познее статическое связывание.

    





